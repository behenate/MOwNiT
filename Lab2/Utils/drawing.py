from Utils.generators import *

import matplotlib.pyplot as plt


# Draw interpolated function. User passes method of interpolation and point generation
def draw(interpolator, a: float, b: float, label: str = "", samples: int = 1000, color=None):
    xs = generate_intervals(samples, a, b)
    results = [0] * samples
    for i in range(samples):
        results[i] = interpolator.interpolate(xs[i])
    plt.plot(xs, results, label=label, color=color)
    return results


# Draw a single parameter function, at points generated by a chosen method (dists)
def draw_funct(func, a: float, b: float, samples=1000, label="function", color=None):
    points = generate_intervals(samples, a, b)
    results = [func(points[i]) for i in range(samples)]
    plt.plot(points, results, label=label, color=color)
    return results

def draw_nodes(xs, ys, color = None):
    plt.scatter(xs, ys, marker="o", s=27, color=color)